package model;
// Generated Oct 22, 2024 5:07:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerOrder generated by hbm2java
 */
@Entity
@Table(name="customer_order"
    ,catalog="ghecommerceappdb"
)
public class CustomerOrder  implements java.io.Serializable {


     private Integer id;
     private Address address;
     private CardDetails cardDetails;
     private Customer customer;
     private OrderStatus orderStatus;
     private ShippingType shippingType;
     private double orderTotal;
     private Date orderDate;
     private Set reviews = new HashSet(0);
     private Set invoices = new HashSet(0);
     private Set orderLines = new HashSet(0);

    public CustomerOrder() {
    }

	
    public CustomerOrder(Address address, Customer customer, OrderStatus orderStatus, ShippingType shippingType, double orderTotal, Date orderDate) {
        this.address = address;
        this.customer = customer;
        this.orderStatus = orderStatus;
        this.shippingType = shippingType;
        this.orderTotal = orderTotal;
        this.orderDate = orderDate;
    }
    public CustomerOrder(Address address, CardDetails cardDetails, Customer customer, OrderStatus orderStatus, ShippingType shippingType, double orderTotal, Date orderDate, Set reviews, Set invoices, Set orderLines) {
       this.address = address;
       this.cardDetails = cardDetails;
       this.customer = customer;
       this.orderStatus = orderStatus;
       this.shippingType = shippingType;
       this.orderTotal = orderTotal;
       this.orderDate = orderDate;
       this.reviews = reviews;
       this.invoices = invoices;
       this.orderLines = orderLines;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shipping_address", nullable=false)
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="card_details")
    public CardDetails getCardDetails() {
        return this.cardDetails;
    }
    
    public void setCardDetails(CardDetails cardDetails) {
        this.cardDetails = cardDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customer_id", nullable=false)
    public Customer getCustomer() {
        return this.customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="order_status", nullable=false)
    public OrderStatus getOrderStatus() {
        return this.orderStatus;
    }
    
    public void setOrderStatus(OrderStatus orderStatus) {
        this.orderStatus = orderStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shipping_type_id", nullable=false)
    public ShippingType getShippingType() {
        return this.shippingType;
    }
    
    public void setShippingType(ShippingType shippingType) {
        this.shippingType = shippingType;
    }

    
    @Column(name="order_total", nullable=false, precision=22, scale=0)
    public double getOrderTotal() {
        return this.orderTotal;
    }
    
    public void setOrderTotal(double orderTotal) {
        this.orderTotal = orderTotal;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="order_date", nullable=false, length=19)
    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerOrder")
    public Set getReviews() {
        return this.reviews;
    }
    
    public void setReviews(Set reviews) {
        this.reviews = reviews;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerOrder")
    public Set getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set invoices) {
        this.invoices = invoices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerOrder")
    public Set getOrderLines() {
        return this.orderLines;
    }
    
    public void setOrderLines(Set orderLines) {
        this.orderLines = orderLines;
    }




}


