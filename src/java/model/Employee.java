package model;
// Generated Oct 22, 2024 5:07:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="employee"
    ,catalog="ghecommerceappdb"
)
public class Employee  implements java.io.Serializable {


     private String employeeId;
     private String fname;
     private String lname;
     private String nic;
     private Date dob;
     private String gender;
     private String email;
     private String address;
     private String cntOne;
     private String cntTwo;
     private Date dateOfHire;
     private String profilePicturePath;
     private Date createdDate;
     private Date lastUpdate;
     private boolean status;
     private Set employeeLoginHistories = new HashSet(0);
     private Set systemUsers = new HashSet(0);

    public Employee() {
    }

	
    public Employee(String employeeId, String fname, String lname, String nic, Date dob, String gender, String email, String address, String cntOne, Date dateOfHire, String profilePicturePath, Date createdDate, Date lastUpdate, boolean status) {
        this.employeeId = employeeId;
        this.fname = fname;
        this.lname = lname;
        this.nic = nic;
        this.dob = dob;
        this.gender = gender;
        this.email = email;
        this.address = address;
        this.cntOne = cntOne;
        this.dateOfHire = dateOfHire;
        this.profilePicturePath = profilePicturePath;
        this.createdDate = createdDate;
        this.lastUpdate = lastUpdate;
        this.status = status;
    }
    public Employee(String employeeId, String fname, String lname, String nic, Date dob, String gender, String email, String address, String cntOne, String cntTwo, Date dateOfHire, String profilePicturePath, Date createdDate, Date lastUpdate, boolean status, Set employeeLoginHistories, Set systemUsers) {
       this.employeeId = employeeId;
       this.fname = fname;
       this.lname = lname;
       this.nic = nic;
       this.dob = dob;
       this.gender = gender;
       this.email = email;
       this.address = address;
       this.cntOne = cntOne;
       this.cntTwo = cntTwo;
       this.dateOfHire = dateOfHire;
       this.profilePicturePath = profilePicturePath;
       this.createdDate = createdDate;
       this.lastUpdate = lastUpdate;
       this.status = status;
       this.employeeLoginHistories = employeeLoginHistories;
       this.systemUsers = systemUsers;
    }
   
     @Id 

    
    @Column(name="employee_id", unique=true, nullable=false, length=20)
    public String getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
    }

    
    @Column(name="fname", nullable=false, length=20)
    public String getFname() {
        return this.fname;
    }
    
    public void setFname(String fname) {
        this.fname = fname;
    }

    
    @Column(name="lname", nullable=false, length=45)
    public String getLname() {
        return this.lname;
    }
    
    public void setLname(String lname) {
        this.lname = lname;
    }

    
    @Column(name="nic", nullable=false, length=12)
    public String getNic() {
        return this.nic;
    }
    
    public void setNic(String nic) {
        this.nic = nic;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dob", nullable=false, length=10)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

    
    @Column(name="gender", nullable=false, length=10)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="email", nullable=false, length=254)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="address", nullable=false)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="cnt_one", nullable=false, length=15)
    public String getCntOne() {
        return this.cntOne;
    }
    
    public void setCntOne(String cntOne) {
        this.cntOne = cntOne;
    }

    
    @Column(name="cnt_two", length=15)
    public String getCntTwo() {
        return this.cntTwo;
    }
    
    public void setCntTwo(String cntTwo) {
        this.cntTwo = cntTwo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_of_hire", nullable=false, length=10)
    public Date getDateOfHire() {
        return this.dateOfHire;
    }
    
    public void setDateOfHire(Date dateOfHire) {
        this.dateOfHire = dateOfHire;
    }

    
    @Column(name="profile_picture_path", nullable=false)
    public String getProfilePicturePath() {
        return this.profilePicturePath;
    }
    
    public void setProfilePicturePath(String profilePicturePath) {
        this.profilePicturePath = profilePicturePath;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_update", nullable=false, length=19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }
    
    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    
    @Column(name="status", nullable=false)
    public boolean isStatus() {
        return this.status;
    }
    
    public void setStatus(boolean status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set getEmployeeLoginHistories() {
        return this.employeeLoginHistories;
    }
    
    public void setEmployeeLoginHistories(Set employeeLoginHistories) {
        this.employeeLoginHistories = employeeLoginHistories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set getSystemUsers() {
        return this.systemUsers;
    }
    
    public void setSystemUsers(Set systemUsers) {
        this.systemUsers = systemUsers;
    }




}


